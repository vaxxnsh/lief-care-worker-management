generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrgRole {
  MANAGER
  CARE_WORKER
}

model User {
  id             String         @id @default(cuid())
  name           String?
  email          String         @unique
  password       String?
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  createdOrgs    Organization[]
  orgMemberships OrgMembers[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Organization {
  id        String       @id @default(uuid())
  name      String
  createdBy String
  admin     User         @relation(fields: [createdBy], references: [id])
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  members   OrgMembers[]
  location  Location[]
}

model OrgMembers {
  id           String       @id @default(uuid())
  orgId        String
  organization Organization @relation(fields: [orgId], references: [id])
  userId       String
  user         User         @relation(fields: [userId], references: [id])
  role         OrgRole      @default(CARE_WORKER)

  @@unique([userId,orgId])
  @@index([userId, role])
}

model Location {
  id             String       @id @default(uuid())
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  name           String
  address        String?
  latitude       Float
  longitude      Float
  radiusMeters   Int          @default(2000)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  // attendances   Attendance[]

  @@index([organizationId])
  @@index([latitude, longitude])
}
